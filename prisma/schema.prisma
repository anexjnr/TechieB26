generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL") // <-- added for migrations
}

enum Role {
  ADMIN
  EDITOR
  HR
}

model AdminUser {
  id           String   @id @default(cuid())
  email        String   @unique
  passwordHash String
  role         Role     @default(ADMIN)
  createdAt    DateTime @default(now())
}

model About {
  id               String  @id @default(cuid())
  heading          String
  content          String
  imageUrl         String?
  imageId          String?
  image            Asset?  @relation("AboutImage", fields: [imageId], references: [id])
  awards           Json?
  leadership       Json?
  // Purpose & Values section
  valuesHeading    String?
  valuesSubheading String?
  valuesCards      Json?
  // How We Serve timeline
  serveHeading     String?
  serveSubheading  String?
  serveSteps       Json?
  enabled          Boolean @default(true)
}

model Service {
  id          String @id @default(cuid())
  title       String
  description String
  icon        String?
  imageId     String?
  image       Asset? @relation("ServiceImage", fields: [imageId], references: [id])
  order       Int?
  enabled     Boolean @default(true)
}

model Project {
  id          String @id @default(cuid())
  title       String
  description String
  imageId     String?
  image       Asset? @relation("ProjectImage", fields: [imageId], references: [id])
  enabled     Boolean @default(true)
}

model TechNews {
  id           String   @id @default(cuid())
  title        String
  excerpt      String?
  url          String   @unique
  imageUrl     String?
  publishedAt  DateTime
  updatedAt    DateTime @default(now())
}

model Testimonial {
  id       String @id @default(cuid())
  author   String
  title    String?
  company  String?
  quote    String
  avatarId String?
  avatar   Asset? @relation("TestimonialAvatar", fields: [avatarId], references: [id])
  enabled  Boolean @default(true)
}

model ClientSection {
  id          String  @id @default(cuid())
  heading     String
  subheading  String?
  details     Json?
  imageUrl    String?
  imageId     String?
  image       Asset?  @relation("ClientSectionImage", fields: [imageId], references: [id])
  order       Int?    @default(0)
  enabled     Boolean @default(true)
}

model Job {
  id          String @id @default(cuid())
  title       String
  location    String?
  type        String?
  description String
  enabled     Boolean @default(true)
}

model Section {
  id         String   @id @default(cuid())
  key        String   @unique
  heading    String?
  subheading String?
  content    String?
  data       Json?
  imageUrl   String?
  imageId    String?
  image      Asset?   @relation("SectionImage", fields: [imageId], references: [id])
  enabled    Boolean  @default(true)
  order      Int?
}

model Asset {
  id        String   @id @default(cuid())
  filename  String
  mime      String
  data      Bytes
  createdAt DateTime @default(now())

  abouts       About[]       @relation("AboutImage")
  projects     Project[]     @relation("ProjectImage")
  testimonials Testimonial[] @relation("TestimonialAvatar")
  sections     Section[]     @relation("SectionImage")
  services     Service[]     @relation("ServiceImage")
}
